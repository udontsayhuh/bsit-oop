//SOLANO, CEDRIC MARK G.
//BSIT 2-2
//Code Practices and Optimizations

using System;

// Custom exception for division by zero
public class DivisionByZeroException : Exception
{
    public DivisionByZeroException(string message) : base(message) { }
}

// Base class for performing arithmetic operations
public class Calculator
{
    // Method to perform arithmetic calculations
    protected virtual double Calculate(double firstNumber, double secondNumber, char operatorSymbol)
    {
        switch (operatorSymbol)
        {
            case '+': return firstNumber + secondNumber;
            case '-': return firstNumber - secondNumber;
            case '*': return firstNumber * secondNumber;
            case '/':
                if (secondNumber == 0)
                    throw new DivisionByZeroException("Error: Division by zero is not allowed.");
                return firstNumber / secondNumber;
            default:
                throw new InvalidOperationException("Invalid operator. Please enter one of the four operators: +, -, *, /");
        }
    }
}

// Represents a mathematical expression
public class Expression : Calculator
{
    // Properties to store expression components
    public double FirstNumber { get; }
    public char OperatorSymbol { get; }

    // Constructor to initialize expression components
    public Expression(double firstNumber, char operatorSymbol)
    {
        FirstNumber = firstNumber;
        OperatorSymbol = operatorSymbol;
    }

    // Method to evaluate the expression
    public double Evaluate(double secondNumber)
    {
        return Calculate(FirstNumber, secondNumber, OperatorSymbol);
    }
}

// Main class for calculator program
class MainClass
{
    public static void Main(string[] args)
    {
        while (true)
        {
            double result = 0;
            double firstNumber = 0;
            char operatorSymbol = ' ';

            Console.WriteLine("=====================================================");
            Console.WriteLine("         CALCULATOR THAT ACCEPTS ANY USER INPUT!     ");
            Console.WriteLine("=====================================================");

            // Input for first numerical value
            Console.Write("Enter a numerical value: ");
            while (!double.TryParse(Console.ReadLine(), out firstNumber))
                Console.WriteLine("Invalid input. Please enter a numerical value.");

            while (true)
            {
                // Input for operator symbol or to display result
                Console.Write("Enter operator (+, -, *, /) or '=' to display result: ");
                char.TryParse(Console.ReadLine(), out operatorSymbol);

                if (operatorSymbol == '=')
                    break;

                if (operatorSymbol != '+' && operatorSymbol != '-' && operatorSymbol != '*' && operatorSymbol != '/')
                {
                    Console.WriteLine("Invalid operator. Please enter one of the four operators: +, -, *, /");
                    continue;
                }

                // Input for second numerical value
                double secondNumber;
                Console.Write("Enter a numerical value: ");
                while (!double.TryParse(Console.ReadLine(), out secondNumber))
                    Console.WriteLine("Invalid input. Please enter a numerical value.");

                Expression expression = new Expression(firstNumber, operatorSymbol);
                try
                {
                    result = expression.Evaluate(secondNumber);
                    Console.WriteLine($"Result: {result}");
                }
                catch (DivisionByZeroException ex)
                {
                    Console.WriteLine(ex.Message);
                }

                firstNumber = result; // Set result as new first number for subsequent calculations
            }

            // If the user wants to perform another calculation
            Console.WriteLine("----------------------------------------------");
            Console.WriteLine("Do you want to do another calculation? (Y/N)");
            Console.WriteLine("----------------------------------------------");
            string choice = Console.ReadLine().ToUpper();
            if (choice != "Y")
            {
                Console.WriteLine("\n==========    Calculator Closed    ==========\n");
                break;
            }
        }
    }
}
